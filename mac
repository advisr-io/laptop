#!/bin/sh

# Welcome to the laptop script!
# Be prepared to turn your laptop (or desktop, no haters here)
# into an awesome development machine.

# Ask for sudo upfront so we don't have to get it later
sudo -v # Keep using sudo so the permissions don't time out
# update existing sudo time stamp if set, otherwise do nothing.
while true; do sudo -n true; sleep 10; kill -0 "$$" || exit; done 2>/dev/null &

fancy_echo() {
  printf "\n%s\n" "$1";
}

# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "$ret\n\nfailed\n\n" >&2; exit $ret' EXIT

set -e

HOMEBREW_PREFIX="/opt/homebrew"

sudo mkdir -p "$HOMEBREW_PREFIX"
sudo chflags norestricted "$HOMEBREW_PREFIX"
sudo chown -R "$LOGNAME:admin" "$HOMEBREW_PREFIX"

if ! command -v brew > /dev/null 2>&1; then
  fancy_echo "Installing Homebrew ..."
  NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL 'https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh')"

  eval "$($HOMEBREW_PREFIX/bin/brew shellenv)"
fi

if brew list | grep -Fq brew-cask; then
  fancy_echo "Uninstalling old Homebrew-Cask ..."
  brew uninstall --force brew-cask
fi

fancy_echo "Updating Homebrew formulae ..."
brew update --force

brew bundle --file=- <<EOF
tap "homebrew/services"
tap "homebrew/cask-versions"

# general
brew "gcc"
brew "openssl"
brew "zsh"
brew "rename"
brew "jq"
brew "coreutils"
brew "htop"
brew "watch"
brew "the_silver_searcher"
brew "ripgrep"
brew "git"
brew "hub"
brew "vim"
brew "ctags"
brew "shellcheck"
brew "tmux"
brew "tmate"
brew "reattach-to-user-namespace"

# advisr
brew "cairo"
brew "pango"
brew "libpng"
brew "jpeg"
brew "giflib"
brew "librsvg"
brew "pixman"
brew "forego"

# language support
brew "asdf"

# windowed apps
cask "slack"
cask "google-chrome"
cask "iterm2"
cask "textmate"
cask "visual-studio-code"
cask "pgadmin4"
cask "redisinsight"
cask "postman"
cask "licecap"

cask "alfred"
cask "rectangle"
cask "docker"
cask "vagrant"
cask "tunnelblick"
cask "ngrok"

EOF

# change shell to zsh
if [ "$(command -v zsh)" != "$HOMEBREW_PREFIX/bin/zsh" ]; then
  shell_path="$(command -v zsh)"

  fancy_echo "Changing your shell to zsh ..."
  if ! grep "$shell_path" /etc/shells > /dev/null 2>&1 ; then
    fancy_echo "Adding '$shell_path' to /etc/shells"
    sudo sh -c "echo $shell_path >> /etc/shells"
  fi
  sudo chsh -s "$shell_path" "$USER"
fi

fancy_echo "Installing On My ZSH ..."
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

#append_to_zshrc() {
#  text="$1"
#  skip_new_line="${2:-0}"
#
#  zshrc="$HOME/.zshrc"
#
#  if ! grep -Fqs "$text" "$zshrc"; then
#    [ "$skip_new_line" -ne 1 ] && printf "\n" >> "$zshrc";
#    printf "%s\n" "$text" >> "$zshrc"
#  fi
#}

#append_to_zshrc "eval \"\$($HOMEBREW_PREFIX/bin/brew shellenv)\""

#touch "$HOME/.zshrc";

#fancy_echo "Adding nodenv init to zsh profile"
#append_to_zshrc "eval \"$(nodenv init -)\"" 1
#eval "$(nodenv init -)"
#
